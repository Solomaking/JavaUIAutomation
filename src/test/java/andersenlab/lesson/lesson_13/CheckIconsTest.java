package andersenlab.lesson.lesson_13;// Generated by Selenium IDE

import andersenlab.lesson.lesson_12.TriangleArea;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.junit.platform.commons.logging.Logger;
import org.junit.platform.commons.logging.LoggerFactory;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class CheckIconsTest {
    private static Logger logger = LoggerFactory.getLogger(TriangleArea.class);

    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @BeforeAll
    public void setUp() {
        System.setProperty(
                "webdriver.chrome.driver", "src/main/resources/chromedriver.exe"
        );

        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @AfterAll
    public void tearDown() {
        driver.quit();
    }

    public String waitForWindow(int timeout) {
        try {
            Thread.sleep(timeout);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        Set<String> whNow = driver.getWindowHandles();
        Set<String> whThen = (Set<String>) vars.get("window_handles");
        if (whNow.size() > whThen.size()) {
            whNow.removeAll(whThen);
        }
        return whNow.iterator().next();
    }

    @Test
    public void checkIcons() {
        driver.get("https://andersenlab.com/");
        driver.manage().window().setSize(new Dimension(1039, 617));
        js.executeScript("window.scrollTo(0,12000)");
        {
            List<WebElement> elements = driver.findElements(By.linkText("skype"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.linkText("whatsApp"));
            assert (elements.size() > 0);
        }
        vars.put("window_handles", driver.getWindowHandles());
        driver.findElement(By.linkText("whatsApp")).click();
        vars.put("win9903", waitForWindow(2000));
        vars.put("root", driver.getWindowHandle());
        driver.switchTo().window(vars.get("win9903").toString());
        {
            List<WebElement> elements = driver.findElements(By.id("action-button"));
            assert (elements.size() > 0);
        }
        driver.close();
        driver.switchTo().window(vars.get("root").toString());
        vars.put("window_handles", driver.getWindowHandles());
        driver.findElement(By.linkText("skype")).click();
        vars.put("win6494", waitForWindow(2000));
        driver.switchTo().window(vars.get("win6494").toString());
        driver.close();
        driver.switchTo().window(vars.get("root").toString());
        assertThat(driver.findElement(By.linkText("vn@andersenlab.com")).getText(), is("vn@andersenlab.com"));
        assertThat(driver.findElement(By.cssSelector(".Contacts-module--link--EsZZy:nth-child(1)")).getText(), is("+48 22 390 64 08"));
        driver.close();
    }
}
